{"version":3,"sources":["webpack:///D:/gatsby-starter-markdown/src/templates/postTemplate.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_actions_layout__WEBPACK_IMPORTED_MODULE_3__","_store_selectors__WEBPACK_IMPORTED_MODULE_5__","mapDispatchToProps","onSidebarContentExpand","connect","state","expandedKey","getSidebarExpandedKey","_ref","data","markdownRemark","frontmatter","html","id","a","createElement","sidebarRoot","root","className","dangerouslySetInnerHTML","__html"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAAAW,GAAAX,EAAA,KAAAA,EAAA,MAmCA,IAMMY,EAAqB,CACzBC,4BAGaC,sBAVS,SAACC,GACvB,MAAO,CACLC,YAAcC,YAAsBF,KAQAH,EAAzBE,CArCf,SAAAI,GAIG,IAHDC,EAGCD,EAHDC,KACAN,EAECK,EAFDL,uBACAG,EACCE,EADDF,YAEQI,EAAmBD,EAAnBC,eACAC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GAK3B,OAJIP,IAAgBO,GAClBV,EAAuBU,GAIvBjB,EAAAkB,EAAAC,cAACjB,EAAA,EAAD,CAAQkB,YAAaL,EAAYM,MACjCrB,EAAAkB,EAAAC,cAAA,OAAKG,UAAU,uBACbtB,EAAAkB,EAAAC,cAAA,OAAKG,UAAU,aAGbtB,EAAAkB,EAAAC,cAAA,OACEG,UAAU,oBACVC,wBAAyB,CAAEC,OAAQR,UAoBtC,IAAMlB,EAAS","file":"component---src-templates-post-template-js-88f8c63f47800b5d1c6c.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/Layout\";\r\nimport { connect } from 'react-redux'\r\nimport { onSidebarContentExpand } from '../actions/layout'\r\nimport \"katex/dist/katex.min.css\"\r\nimport { getSidebarExpandedKey } from \"../store/selectors\";\r\n\r\nfunction Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  onSidebarContentExpand,\r\n  expandedKey,\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds our post data\r\n  const { frontmatter, html, id } = markdownRemark\r\n  if (expandedKey !== id) {\r\n    onSidebarContentExpand(id)\r\n  }\r\n\r\n  return (\r\n    <Layout sidebarRoot={frontmatter.root}>\r\n    <div className=\"blog-post-container\">\r\n      <div className=\"blog-post\">\r\n        {/* <h1>{frontmatter.title}</h1>\r\n        <h5>{frontmatter.date}</h5> */}\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      </div>\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expandedKey : getSidebarExpandedKey(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSidebarContentExpand,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Template)\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(fields: { slug: { eq: $path} }) {\r\n      fields {\r\n        slug\r\n      }\r\n      id\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        root\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}